ERROR: Macros with complex values should be enclosed in parentheses
#91: FILE: arch/x86/kvm/x86.c:91:
+#define VM_STAT(x) offsetof(struct kvm, stat.x), KVM_STAT_VM

ERROR: Macros with complex values should be enclosed in parentheses
#92: FILE: arch/x86/kvm/x86.c:92:
+#define VCPU_STAT(x) offsetof(struct kvm_vcpu, stat.x), KVM_STAT_VCPU

ERROR: code indent should use tabs where possible
#95: FILE: arch/x86/kvm/x86.c:95:
+                                    KVM_X2APIC_API_DISABLE_BROADCAST_QUIRK)$

WARNING: please, no spaces at the start of a line
#95: FILE: arch/x86/kvm/x86.c:95:
+                                    KVM_X2APIC_API_DISABLE_BROADCAST_QUIRK)$

ERROR: do not initialise statics to 0
#105: FILE: arch/x86/kvm/x86.c:105:
+static bool __read_mostly ignore_msrs = 0;

WARNING: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#106: FILE: arch/x86/kvm/x86.c:106:
+module_param(ignore_msrs, bool, S_IRUGO | S_IWUSR);

WARNING: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#109: FILE: arch/x86/kvm/x86.c:109:
+module_param(min_timer_period_us, uint, S_IRUGO | S_IWUSR);

WARNING: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#112: FILE: arch/x86/kvm/x86.c:112:
+module_param(kvmclock_periodic_sync, bool, S_IRUGO);

WARNING: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#127: FILE: arch/x86/kvm/x86.c:127:
+module_param(tsc_tolerance_ppm, uint, S_IRUGO | S_IWUSR);

ERROR: do not initialise globals to 0
#130: FILE: arch/x86/kvm/x86.c:130:
+unsigned int __read_mostly lapic_timer_advance_ns = 0;

WARNING: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#131: FILE: arch/x86/kvm/x86.c:131:
+module_param(lapic_timer_advance_ns, uint, S_IRUGO | S_IWUSR);

WARNING: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#134: FILE: arch/x86/kvm/x86.c:134:
+module_param(vector_hashing, bool, S_IRUGO);

ERROR: do not initialise statics to false
#136: FILE: arch/x86/kvm/x86.c:136:
+static bool __read_mostly backwards_tsc_observed = false;

WARNING: Missing a blank line after declarations
#203: FILE: arch/x86/kvm/x86.c:203:
+	int i;
+	for (i = 0; i < roundup_pow_of_two(ASYNC_PF_PER_VCPU); i++)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: arch/x86/kvm/x86.c:209:
+	unsigned slot;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: arch/x86/kvm/x86.c:234:
+static void shared_msr_update(unsigned slot, u32 msr)

WARNING: Block comments use a trailing */ on a separate line
#241: FILE: arch/x86/kvm/x86.c:241:
+	 * so don't need lock */

WARNING: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#243: FILE: arch/x86/kvm/x86.c:243:
+		printk(KERN_ERR "kvm: invalid MSR slot!");

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#251: FILE: arch/x86/kvm/x86.c:251:
+void kvm_define_shared_msr(unsigned slot, u32 msr)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: arch/x86/kvm/x86.c:262:
+	unsigned i;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#268: FILE: arch/x86/kvm/x86.c:268:
+int kvm_set_shared_msr(unsigned slot, u64 value, u64 mask)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#382: FILE: arch/x86/kvm/x86.c:382:
+		unsigned nr, bool has_error, u32 error_code,

WARNING: labels should not be indented
#391: FILE: arch/x86/kvm/x86.c:391:
+	queue:

WARNING: Block comments use * on subsequent lines
#420: FILE: arch/x86/kvm/x86.c:420:
+		/* replace previous exception with a new one in a hope
+		   that instruction re-execution will regenerate lost

WARNING: Block comments use a trailing */ on a separate line
#421: FILE: arch/x86/kvm/x86.c:421:
+		   exception */

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#425: FILE: arch/x86/kvm/x86.c:425:
+void kvm_queue_exception(struct kvm_vcpu *vcpu, unsigned nr)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#431: FILE: arch/x86/kvm/x86.c:431:
+void kvm_requeue_exception(struct kvm_vcpu *vcpu, unsigned nr)

WARNING: line over 80 characters
#456: FILE: arch/x86/kvm/x86.c:456:
+static bool kvm_propagate_fault(struct kvm_vcpu *vcpu, struct x86_exception *fault)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#473: FILE: arch/x86/kvm/x86.c:473:
+void kvm_queue_exception_e(struct kvm_vcpu *vcpu, unsigned nr, u32 error_code)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#479: FILE: arch/x86/kvm/x86.c:479:
+void kvm_requeue_exception_e(struct kvm_vcpu *vcpu, unsigned nr, u32 error_code)

WARNING: line over 80 characters
#510: FILE: arch/x86/kvm/x86.c:510:
+ * running guest. The difference to kvm_vcpu_read_guest_page is that this function

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#545: FILE: arch/x86/kvm/x86.c:545:
+	unsigned offset = ((cr3 & (PAGE_SIZE-1)) >> 5) << 2;

WARNING: line over 80 characters
#599: FILE: arch/x86/kvm/x86.c:599:
+	changed = memcmp(pdpte, vcpu->arch.walk_mmu->pdptrs, sizeof(pdpte)) != 0;

WARNING: line over 80 characters
#667: FILE: arch/x86/kvm/x86.c:667:
+	(void)kvm_set_cr0(vcpu, kvm_read_cr0_bits(vcpu, ~0x0eul) | (msw & 0x0f));

WARNING: line over 80 characters
#779: FILE: arch/x86/kvm/x86.c:779:
+		if ((kvm_read_cr3(vcpu) & X86_CR3_PCID_MASK) || !is_long_mode(vcpu))

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#982: FILE: arch/x86/kvm/x86.c:982:
+static unsigned num_msrs_to_save;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#1008: FILE: arch/x86/kvm/x86.c:1008:
+static unsigned num_emulated_msrs;

WARNING: please, no spaces at the start of a line
#1060: FILE: arch/x86/kvm/x86.c:1060:
+       efer_reserved_bits &= ~mask;$

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#1103: FILE: arch/x86/kvm/x86.c:1103:
+static int do_get_msr(struct kvm_vcpu *vcpu, unsigned index, u64 *data)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#1118: FILE: arch/x86/kvm/x86.c:1118:
+static int do_set_msr(struct kvm_vcpu *vcpu, unsigned index, u64 *data)

WARNING: line over 80 characters
#1156: FILE: arch/x86/kvm/x86.c:1156:
+	vdata->clock.vclock_mode	= tk->tkr_mono.clock->archdata.vclock_mode;

WARNING: line over 80 characters
#1210: FILE: arch/x86/kvm/x86.c:1210:
+		struct timespec64 ts = ns_to_timespec64(kvm->arch.kvmclock_offset);

WARNING: Missing a blank line after declarations
#1211: FILE: arch/x86/kvm/x86.c:1211:
+		struct timespec64 ts = ns_to_timespec64(kvm->arch.kvmclock_offset);
+		boot = timespec64_sub(boot, ts);

WARNING: Missing a blank line after declarations
#1270: FILE: arch/x86/kvm/x86.c:1270:
+	u64 v = (u64)khz * (1000000 + ppm);
+	do_div(v, 1000000);

WARNING: else is not generally useful after a break or return
#1290: FILE: arch/x86/kvm/x86.c:1290:
+			return 0;
+		} else {

WARNING: line over 80 characters
#1337: FILE: arch/x86/kvm/x86.c:1337:
+		pr_debug("kvm: requested TSC rate %u falls outside tolerance [%u,%u]\n", user_tsc_khz, thresh_lo, thresh_hi);

ERROR: code indent should use tabs where possible
#1376: FILE: arch/x86/kvm/x86.c:1376:
+^I^I            ka->use_master_clock, gtod->clock.vclock_mode);$

WARNING: Missing a blank line after declarations
#1383: FILE: arch/x86/kvm/x86.c:1383:
+	u64 curr_offset = vcpu->arch.tsc_offset;
+	vcpu->arch.ia32_tsc_adjust_msr += offset - curr_offset;

WARNING: line over 80 characters
#1470: FILE: arch/x86/kvm/x86.c:1470:
+		: "A"(usdiff * 1000), [divisor] "rm"(vcpu->arch.virtual_tsc_khz));

ERROR: code indent should use tabs where possible
#1488: FILE: arch/x86/kvm/x86.c:1488:
+         *$

ERROR: code indent should use tabs where possible
#1493: FILE: arch/x86/kvm/x86.c:1493:
+         */$

WARNING: Missing a blank line after declarations
#1501: FILE: arch/x86/kvm/x86.c:1501:
+			u64 delta = nsec_to_cycles(vcpu, elapsed);
+			data += delta;

WARNING: line over 80 characters
#1506: FILE: arch/x86/kvm/x86.c:1506:
+		already_matched = (vcpu->arch.this_tsc_generation == kvm->arch.cur_tsc_generation);

WARNING: braces {} are not necessary for any arm of this statement
#1547: FILE: arch/x86/kvm/x86.c:1547:
+	if (!matched) {
[...]
+	} else if (!already_matched) {
[...]

WARNING: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1557: FILE: arch/x86/kvm/x86.c:1557:
+EXPORT_SYMBOL_GPL(kvm_write_tsc);

WARNING: please, no space before tabs
#1647: FILE: arch/x86/kvm/x86.c:1647:
+ * ^I^IVCPU0 on CPU0^I^I|^IVCPU1 on CPU1$

WARNING: please, no space before tabs
#1651: FILE: arch/x86/kvm/x86.c:1651:
+ * ^I^I^I^I^I| tsc1 = tsc0 + M$

WARNING: line over 80 characters
#1655: FILE: arch/x86/kvm/x86.c:1655:
+ * 				        | ret1 = timespec0 + N + (rdtsc - (tsc0 + M))

WARNING: please, no space before tabs
#1655: FILE: arch/x86/kvm/x86.c:1655:
+ * ^I^I^I^I        | ret1 = timespec0 + N + (rdtsc - (tsc0 + M))$

WARNING: please, no space before tabs
#1659: FILE: arch/x86/kvm/x86.c:1659:
+ * ^I- ret0 < ret1$

WARNING: memory barrier without comment
#1800: FILE: arch/x86/kvm/x86.c:1800:
+	smp_wmb();

WARNING: memory barrier without comment
#1816: FILE: arch/x86/kvm/x86.c:1816:
+	smp_wmb();

WARNING: Missing a blank line after declarations
#1876: FILE: arch/x86/kvm/x86.c:1876:
+		u64 tsc = compute_guest_tsc(v, kernel_ns);
+		if (tsc > tsc_timestamp) {

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#1974: FILE: arch/x86/kvm/x86.c:1974:
+	unsigned bank_num = mcg_cap & 0xff;

WARNING: line over 80 characters
#2080: FILE: arch/x86/kvm/x86.c:2080:
+		vcpu->arch.st.steal.version += 1;  /* first time write, random junk */

WARNING: memory barrier without comment
#2087: FILE: arch/x86/kvm/x86.c:2087:
+	smp_wmb();

WARNING: memory barrier without comment
#2096: FILE: arch/x86/kvm/x86.c:2096:
+	smp_wmb();

WARNING: quoted string split across lines
#2135: FILE: arch/x86/kvm/x86.c:2135:
+			vcpu_unimpl(vcpu, "unimplemented MMIO_CONF_BASE wrmsr: "
+				    "0x%llx\n", data);

WARNING: Block comments use * on subsequent lines
#2145: FILE: arch/x86/kvm/x86.c:2145:
+			/* Values other than LBR and BTF are vendor-specific,
+			   thus reserved and should throw a #GP */

WARNING: Block comments use a trailing */ on a separate line
#2145: FILE: arch/x86/kvm/x86.c:2145:
+			   thus reserved and should throw a #GP */

WARNING: Missing a blank line after declarations
#2164: FILE: arch/x86/kvm/x86.c:2164:
+				s64 adj = data - vcpu->arch.ia32_tsc_adjust_msr;
+				adjust_tsc_offset_guest(vcpu, adj);

WARNING: quoted string split across lines
#2259: FILE: arch/x86/kvm/x86.c:2259:
+			vcpu_unimpl(vcpu, "disabled perfctr wrmsr: "
+				    "0x%x data 0x%llx\n", msr, data);

WARNING: line over 80 characters
#2281: FILE: arch/x86/kvm/x86.c:2281:
+		vcpu_unimpl(vcpu, "ignored wrmsr: 0x%x data 0x%llx\n", msr, data);

WARNING: else is not generally useful after a break or return
#2302: FILE: arch/x86/kvm/x86.c:2302:
+			return 1;
+		} else {

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2328: FILE: arch/x86/kvm/x86.c:2328:
+	unsigned bank_num = mcg_cap & 0xff;

WARNING: Missing a blank line after declarations
#2350: FILE: arch/x86/kvm/x86.c:2350:
+			u32 offset = msr - MSR_IA32_MC0_CTL;
+			data = vcpu->arch.mce_banks[offset];

WARNING: line over 80 characters
#2386: FILE: arch/x86/kvm/x86.c:2386:
+			return kvm_pmu_get_msr(vcpu, msr_info->index, &msr_info->data);

WARNING: line over 80 characters
#2416: FILE: arch/x86/kvm/x86.c:2416:
+		return kvm_x2apic_msr_read(vcpu, msr_info->index, &msr_info->data);

WARNING: break is not useful after a goto or return
#2417: FILE: arch/x86/kvm/x86.c:2417:
+		return kvm_x2apic_msr_read(vcpu, msr_info->index, &msr_info->data);
+		break;

WARNING: line over 80 characters
#2509: FILE: arch/x86/kvm/x86.c:2509:
+			return kvm_pmu_get_msr(vcpu, msr_info->index, &msr_info->data);

WARNING: else is not generally useful after a break or return
#2514: FILE: arch/x86/kvm/x86.c:2514:
+			return 1;
+		} else {

WARNING: line over 80 characters
#2515: FILE: arch/x86/kvm/x86.c:2515:
+			vcpu_unimpl(vcpu, "ignored rdmsr: 0x%x\n", msr_info->index);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2532: FILE: arch/x86/kvm/x86.c:2532:
+				  unsigned index, u64 *data))

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2552: FILE: arch/x86/kvm/x86.c:2552:
+				unsigned index, u64 *data),

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2558: FILE: arch/x86/kvm/x86.c:2558:
+	unsigned size;

WARNING: sizeof msrs should be sizeof(msrs)
#2561: FILE: arch/x86/kvm/x86.c:2561:
+	if (copy_from_user(&msrs, user_msrs, sizeof msrs))

ERROR: code indent should use tabs where possible
#2635: FILE: arch/x86/kvm/x86.c:2635:
+ ^Icase KVM_CAP_SPLIT_IRQCHIP:$

WARNING: please, no space before tabs
#2635: FILE: arch/x86/kvm/x86.c:2635:
+ ^Icase KVM_CAP_SPLIT_IRQCHIP:$

WARNING: please, no spaces at the start of a line
#2635: FILE: arch/x86/kvm/x86.c:2635:
+ ^Icase KVM_CAP_SPLIT_IRQCHIP:$

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2709: FILE: arch/x86/kvm/x86.c:2709:
+		unsigned n;

WARNING: sizeof msr_list should be sizeof(msr_list)
#2712: FILE: arch/x86/kvm/x86.c:2712:
+		if (copy_from_user(&msr_list, user_msr_list, sizeof msr_list))

WARNING: sizeof msr_list should be sizeof(msr_list)
#2716: FILE: arch/x86/kvm/x86.c:2716:
+		if (copy_to_user(user_msr_list, &msr_list, sizeof msr_list))

WARNING: sizeof cpuid should be sizeof(cpuid)
#2738: FILE: arch/x86/kvm/x86.c:2738:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

WARNING: sizeof cpuid should be sizeof(cpuid)
#2747: FILE: arch/x86/kvm/x86.c:2747:
+		if (copy_to_user(cpuid_arg, &cpuid, sizeof cpuid))

WARNING: line over 80 characters
#2816: FILE: arch/x86/kvm/x86.c:2816:
+					kvm_get_lapic_target_expiration_tsc(vcpu)))

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2966: FILE: arch/x86/kvm/x86.c:2966:
+	unsigned bank_num = mcg_cap & 0xff, bank;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#2992: FILE: arch/x86/kvm/x86.c:2992:
+	unsigned bank_num = mcg_cap & 0xff;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#3073: FILE: arch/x86/kvm/x86.c:3073:
+static void kvm_set_hflags(struct kvm_vcpu *vcpu, unsigned emul_flags);

WARNING: Missing a blank line after declarations
#3112: FILE: arch/x86/kvm/x86.c:3112:
+		u32 hflags = vcpu->arch.hflags;
+		if (events->smi.smm)

WARNING: line over 80 characters
#3125: FILE: arch/x86/kvm/x86.c:3125:
+				set_bit(KVM_APIC_INIT, &vcpu->arch.apic->pending_events);

WARNING: line over 80 characters
#3127: FILE: arch/x86/kvm/x86.c:3127:
+				clear_bit(KVM_APIC_INIT, &vcpu->arch.apic->pending_events);

WARNING: Missing a blank line after declarations
#3200: FILE: arch/x86/kvm/x86.c:3200:
+			u32 size, offset, ecx, edx;
+			cpuid_count(XSTATE_CPUID, index,

WARNING: Missing a blank line after declarations
#3238: FILE: arch/x86/kvm/x86.c:3238:
+			u32 size, offset, ecx, edx;
+			cpuid_count(XSTATE_CPUID, index,

WARNING: sizeof irq should be sizeof(irq)
#3402: FILE: arch/x86/kvm/x86.c:3402:
+		if (copy_from_user(&irq, argp, sizeof irq))

WARNING: sizeof cpuid should be sizeof(cpuid)
#3420: FILE: arch/x86/kvm/x86.c:3420:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

WARNING: sizeof cpuid should be sizeof(cpuid)
#3430: FILE: arch/x86/kvm/x86.c:3430:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

WARNING: sizeof cpuid should be sizeof(cpuid)
#3441: FILE: arch/x86/kvm/x86.c:3441:
+		if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))

WARNING: sizeof cpuid should be sizeof(cpuid)
#3448: FILE: arch/x86/kvm/x86.c:3448:
+		if (copy_to_user(cpuid_arg, &cpuid, sizeof cpuid))

WARNING: sizeof tac should be sizeof(tac)
#3463: FILE: arch/x86/kvm/x86.c:3463:
+		if (copy_from_user(&tac, argp, sizeof tac))

WARNING: sizeof tac should be sizeof(tac)
#3469: FILE: arch/x86/kvm/x86.c:3469:
+		if (copy_to_user(argp, &tac, sizeof tac))

WARNING: sizeof va should be sizeof(va)
#3482: FILE: arch/x86/kvm/x86.c:3482:
+		if (copy_from_user(&va, argp, sizeof va))

WARNING: sizeof mcg_cap should be sizeof(mcg_cap)
#3493: FILE: arch/x86/kvm/x86.c:3493:
+		if (copy_from_user(&mcg_cap, argp, sizeof mcg_cap))

WARNING: sizeof mce should be sizeof(mce)
#3502: FILE: arch/x86/kvm/x86.c:3502:
+		if (copy_from_user(&mce, argp, sizeof mce))

WARNING: line over 80 characters
#3522: FILE: arch/x86/kvm/x86.c:3522:
+		if (copy_from_user(&events, argp, sizeof(struct kvm_vcpu_events)))

WARNING: sizeof ident_addr should be sizeof(ident_addr)
#3951: FILE: arch/x86/kvm/x86.c:3951:
+		if (copy_from_user(&ident_addr, argp, sizeof ident_addr))

WARNING: labels should not be indented
#3997: FILE: arch/x86/kvm/x86.c:3997:
+	create_irqchip_unlock:

WARNING: labels should not be indented
#4009: FILE: arch/x86/kvm/x86.c:4009:
+	create_pit:

WARNING: labels should not be indented
#4018: FILE: arch/x86/kvm/x86.c:4018:
+	create_pit_unlock:

WARNING: sizeof *chip should be sizeof(*chip)
#4038: FILE: arch/x86/kvm/x86.c:4038:
+		if (copy_to_user(argp, chip, sizeof *chip))

WARNING: labels should not be indented
#4041: FILE: arch/x86/kvm/x86.c:4041:
+	get_irqchip_out:

WARNING: labels should not be indented
#4062: FILE: arch/x86/kvm/x86.c:4062:
+	set_irqchip_out:

WARNING: sizeof u.ps should be sizeof(u.ps)
#4084: FILE: arch/x86/kvm/x86.c:4084:
+		if (copy_from_user(&u.ps, argp, sizeof u.ps))

WARNING: Missing a blank line after declarations
#4117: FILE: arch/x86/kvm/x86.c:4117:
+		struct kvm_reinject_control control;
+		r =  -EFAULT;

WARNING: line over 80 characters
#4170: FILE: arch/x86/kvm/x86.c:4170:
+		user_ns.flags = kvm->arch.use_master_clock ? KVM_CLOCK_TSC_STABLE : 0;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4199: FILE: arch/x86/kvm/x86.c:4199:
+	unsigned i, j;

WARNING: line over 80 characters
#4254: FILE: arch/x86/kvm/x86.c:4254:
+		      !kvm_iodevice_write(vcpu, &vcpu->arch.apic->dev, addr, n, v))

WARNING: Missing a blank line after declarations
#4318: FILE: arch/x86/kvm/x86.c:4318:
+	u32 access = (kvm_x86_ops->get_cpl(vcpu) == 3) ? PFERR_USER_MASK : 0;
+	return vcpu->arch.walk_mmu->gva_to_gpa(vcpu, gva, access, exception);

WARNING: please, no spaces at the start of a line
#4321: FILE: arch/x86/kvm/x86.c:4321:
+ gpa_t kvm_mmu_gva_to_gpa_fetch(struct kvm_vcpu *vcpu, gva_t gva,$

WARNING: Missing a blank line after declarations
#4325: FILE: arch/x86/kvm/x86.c:4325:
+	u32 access = (kvm_x86_ops->get_cpl(vcpu) == 3) ? PFERR_USER_MASK : 0;
+	access |= PFERR_FETCH_MASK;

WARNING: Missing a blank line after declarations
#4333: FILE: arch/x86/kvm/x86.c:4333:
+	u32 access = (kvm_x86_ops->get_cpl(vcpu) == 3) ? PFERR_USER_MASK : 0;
+	access |= PFERR_WRITE_MASK;

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4354: FILE: arch/x86/kvm/x86.c:4354:
+		unsigned offset = addr & (PAGE_SIZE-1);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4355: FILE: arch/x86/kvm/x86.c:4355:
+		unsigned toread = min(bytes, (unsigned)PAGE_SIZE - offset);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4355: FILE: arch/x86/kvm/x86.c:4355:
+		unsigned toread = min(bytes, (unsigned)PAGE_SIZE - offset);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4382: FILE: arch/x86/kvm/x86.c:4382:
+	unsigned offset;

WARNING: line over 80 characters
#4386: FILE: arch/x86/kvm/x86.c:4386:
+	gpa_t gpa = vcpu->arch.walk_mmu->gva_to_gpa(vcpu, addr, access|PFERR_FETCH_MASK,

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4393: FILE: arch/x86/kvm/x86.c:4393:
+		bytes = (unsigned)PAGE_SIZE - offset;

WARNING: Missing a blank line after declarations
#4419: FILE: arch/x86/kvm/x86.c:4419:
+	struct kvm_vcpu *vcpu = emul_to_vcpu(ctxt);
+	return kvm_read_guest_virt_helper(addr, val, bytes, vcpu, 0, exception);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4444: FILE: arch/x86/kvm/x86.c:4444:
+		unsigned offset = addr & (PAGE_SIZE-1);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4445: FILE: arch/x86/kvm/x86.c:4445:
+		unsigned towrite = min(bytes, (unsigned)PAGE_SIZE - offset);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#4445: FILE: arch/x86/kvm/x86.c:4445:
+		unsigned towrite = min(bytes, (unsigned)PAGE_SIZE - offset);

WARNING: line over 80 characters
#4591: FILE: arch/x86/kvm/x86.c:4591:
+				       const struct read_write_emulator_ops *ops)

WARNING: line over 80 characters
#4832: FILE: arch/x86/kvm/x86.c:4832:
+		trace_kvm_pio(KVM_PIO_IN, port, size, count, vcpu->arch.pio_data);

WARNING: void function return statements are not generally useful
#5062: FILE: arch/x86/kvm/x86.c:5062:
+	return;
+}

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#5146: FILE: arch/x86/kvm/x86.c:5146:
+static ulong emulator_read_gpr(struct x86_emulate_ctxt *ctxt, unsigned reg)

WARNING: line over 80 characters
#5151: FILE: arch/x86/kvm/x86.c:5151:
+static void emulator_write_gpr(struct x86_emulate_ctxt *ctxt, unsigned reg, ulong val)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#5151: FILE: arch/x86/kvm/x86.c:5151:
+static void emulator_write_gpr(struct x86_emulate_ctxt *ctxt, unsigned reg, ulong val)

WARNING: Missing a blank line after declarations
#5224: FILE: arch/x86/kvm/x86.c:5224:
+	struct x86_emulate_ctxt *ctxt = &vcpu->arch.emulate_ctxt;
+	if (ctxt->exception.vector == PF_VECTOR)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#5434: FILE: arch/x86/kvm/x86.c:5434:
+static void kvm_set_hflags(struct kvm_vcpu *vcpu, unsigned emul_flags)

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#5436: FILE: arch/x86/kvm/x86.c:5436:
+	unsigned changed = vcpu->arch.hflags ^ emul_flags;

WARNING: line over 80 characters
#5459: FILE: arch/x86/kvm/x86.c:5459:
+static void kvm_vcpu_check_singlestep(struct kvm_vcpu *vcpu, unsigned long rflags, int *r)

WARNING: Block comments use * on subsequent lines
#5606: FILE: arch/x86/kvm/x86.c:5606:
+	/* this is needed for vmware backdoor interface to work since it
+	   changes registers values  during IO operation */

WARNING: Block comments use a trailing */ on a separate line
#5606: FILE: arch/x86/kvm/x86.c:5606:
+	   changes registers values  during IO operation */

WARNING: line over 80 characters
#5636: FILE: arch/x86/kvm/x86.c:5636:
+			vcpu->arch.complete_userspace_io = complete_emulated_pio;

WARNING: Missing a blank line after declarations
#5651: FILE: arch/x86/kvm/x86.c:5651:
+		unsigned long rflags = kvm_x86_ops->get_rflags(vcpu);
+		toggle_interruptibility(vcpu, ctxt->interruptibility);

WARNING: line over 80 characters
#5751: FILE: arch/x86/kvm/x86.c:5751:
+static int kvmclock_cpufreq_notifier(struct notifier_block *nb, unsigned long val,

WARNING: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5995: FILE: arch/x86/kvm/x86.c:5995:
+		printk(KERN_ERR "kvm: already loaded the other module\n");

WARNING: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6001: FILE: arch/x86/kvm/x86.c:6001:
+		printk(KERN_ERR "kvm: no hardware support\n");

WARNING: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6006: FILE: arch/x86/kvm/x86.c:6006:
+		printk(KERN_ERR "kvm: disabled by bios\n");

WARNING: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6014: FILE: arch/x86/kvm/x86.c:6014:
+		printk(KERN_ERR "kvm: failed to allocate percpu kvm_shared_msrs\n");

WARNING: else is not generally useful after a break or return
#6072: FILE: arch/x86/kvm/x86.c:6072:
+		return 1;
+	} else {

WARNING: Block comments should align the * on each line
#6095: FILE: arch/x86/kvm/x86.c:6095:
+ * num_exits: number of vm exits from the VCPU
+*/

WARNING: line over 80 characters
#6339: FILE: arch/x86/kvm/x86.c:6339:
+		 * calling check_nested_events again here to avoid a race condition.

WARNING: line over 80 characters
#6340: FILE: arch/x86/kvm/x86.c:6340:
+		 * See https://lkml.org/lkml/2014/7/2/60 for discussion about this

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#6361: FILE: arch/x86/kvm/x86.c:6361:
+	unsigned limit = 2;

ERROR: Macros with complex values should be enclosed in parentheses
#6376: FILE: arch/x86/kvm/x86.c:6376:
+#define put_smstate(type, buf, offset, val)			  \
+	*(type *)((buf) + (offset) - 0x7e00) = val

WARNING: Missing a blank line after declarations
#6382: FILE: arch/x86/kvm/x86.c:6382:
+	u32 flags = 0;
+	flags |= seg->g       << 23;

WARNING: line over 80 characters
#6442: FILE: arch/x86/kvm/x86.c:6442:
+		put_smstate(u32, buf, 0x7fd0 + i * 4, kvm_register_read(vcpu, i));

WARNING: line over 80 characters
#6488: FILE: arch/x86/kvm/x86.c:6488:
+		put_smstate(u64, buf, 0x7ff8 - i * 8, kvm_register_read(vcpu, i));

WARNING: line over 80 characters
#6551: FILE: arch/x86/kvm/x86.c:6551:
+	kvm_vcpu_write_guest(vcpu, vcpu->arch.smbase + 0xfe00, buf, sizeof(buf));

WARNING: line over 80 characters
#6561: FILE: arch/x86/kvm/x86.c:6561:
+	cr0 = vcpu->arch.cr0 & ~(X86_CR0_PE | X86_CR0_EM | X86_CR0_TS | X86_CR0_PG);

WARNING: line over 80 characters
#6813: FILE: arch/x86/kvm/x86.c:6813:
+			 * and then we request an immediate exit to inject the SMI.

WARNING: braces {} are not necessary for single statement blocks
#6830: FILE: arch/x86/kvm/x86.c:6830:
+	if (unlikely(r)) {
+		goto cancel_injection;
+	}

WARNING: memory barrier without comment
#6857: FILE: arch/x86/kvm/x86.c:6857:
+		smp_wmb();

WARNING: memory barrier without comment
#6916: FILE: arch/x86/kvm/x86.c:6916:
+	smp_wmb();

WARNING: Missing a blank line after declarations
#6936: FILE: arch/x86/kvm/x86.c:6936:
+		unsigned long rip = kvm_rip_read(vcpu);
+		profile_hit(KVM_PROFILING, (void *)rip);

ERROR: space required before the open parenthesis '('
#6972: FILE: arch/x86/kvm/x86.c:6972:
+	switch(vcpu->arch.mp_state) {

WARNING: break is not useful after a goto or return
#6984: FILE: arch/x86/kvm/x86.c:6984:
+		return -EINTR;
+		break;

WARNING: braces {} are not necessary for any arm of this statement
#7003: FILE: arch/x86/kvm/x86.c:7003:
+		if (kvm_vcpu_running(vcpu)) {
[...]
+		} else {
[...]

WARNING: Missing a blank line after declarations
#7047: FILE: arch/x86/kvm/x86.c:7047:
+	int r;
+	vcpu->srcu_idx = srcu_read_lock(&vcpu->kvm->srcu);

WARNING: Prefer 'unsigned int' to bare use of 'unsigned'
#7084: FILE: arch/x86/kvm/x86.c:7084:
+	unsigned len;

WARNING: line over 80 characters
#7154: FILE: arch/x86/kvm/x86.c:7154:
+		int (*cui)(struct kvm_vcpu *) = vcpu->arch.complete_userspace_io;

WARNING: Missing a blank line after declarations
#7155: FILE: arch/x86/kvm/x86.c:7155:
+		int (*cui)(struct kvm_vcpu *) = vcpu->arch.complete_userspace_io;
+		vcpu->arch.complete_userspace_io = NULL;

WARNING: sizeof sregs->interrupt_bitmap should be sizeof(sregs->interrupt_bitmap)
#7284: FILE: arch/x86/kvm/x86.c:7284:
+	memset(sregs->interrupt_bitmap, 0, sizeof sregs->interrupt_bitmap);

WARNING: sizeof fxsave->xmm_space should be sizeof(fxsave->xmm_space)
#7512: FILE: arch/x86/kvm/x86.c:7512:
+	memcpy(fpu->xmm, fxsave->xmm_space, sizeof fxsave->xmm_space);

WARNING: sizeof fxsave->xmm_space should be sizeof(fxsave->xmm_space)
#7529: FILE: arch/x86/kvm/x86.c:7529:
+	memcpy(fxsave->xmm_space, fpu->xmm, sizeof fxsave->xmm_space);

WARNING: Missing a blank line after declarations
#7639: FILE: arch/x86/kvm/x86.c:7639:
+	int r;
+	vcpu->arch.apf.msr_val = 0;

WARNING: Missing a blank line after declarations
#7771: FILE: arch/x86/kvm/x86.c:7771:
+		u64 delta_cyc = max_tsc - local_tsc;
+		backwards_tsc_observed = true;

WARNING: line over 80 characters
#7776: FILE: arch/x86/kvm/x86.c:7776:
+				kvm_make_request(KVM_REQ_MASTERCLOCK_UPDATE, vcpu);

WARNING: line over 80 characters
#7818: FILE: arch/x86/kvm/x86.c:7818:
+		kvm_default_tsc_scaling_ratio = 1ULL << kvm_tsc_scaling_ratio_frac_bits;

WARNING: Missing a blank line after declarations
#7993: FILE: arch/x86/kvm/x86.c:7993:
+	int r;
+	r = vcpu_load(vcpu);

WARNING: line over 80 characters
#8104: FILE: arch/x86/kvm/x86.c:8104:
+		x86_set_memory_region(kvm, APIC_ACCESS_PAGE_PRIVATE_MEMSLOT, 0, 0);

WARNING: line over 80 characters
#8105: FILE: arch/x86/kvm/x86.c:8105:
+		x86_set_memory_region(kvm, IDENTITY_PAGETABLE_PRIVATE_MEMSLOT, 0, 0);

WARNING: line over 80 characters
#8170: FILE: arch/x86/kvm/x86.c:8170:
+		if ((slot->base_gfn + npages) & (KVM_PAGES_PER_HPAGE(level) - 1))

WARNING: line over 80 characters
#8178: FILE: arch/x86/kvm/x86.c:8178:
+		if ((slot->base_gfn ^ ugfn) & (KVM_PAGES_PER_HPAGE(level) - 1) ||

WARNING: Block comments should align the * on each line
#8624: FILE: arch/x86/kvm/x86.c:8624:
+	 * int this case doesn't want to receive the interrupts.
+	*/

WARNING: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#8627: FILE: arch/x86/kvm/x86.c:8627:
+		printk(KERN_INFO "irq bypass consumer (token %p) unregistration"

WARNING: quoted string split across lines
#8628: FILE: arch/x86/kvm/x86.c:8628:
+		printk(KERN_INFO "irq bypass consumer (token %p) unregistration"
+		       " fails: %d\n", irqfd->consumer.token, ret);

total: 12 errors, 185 warnings, 8664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

arch/x86/kvm/x86.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
